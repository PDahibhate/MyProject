package myproject;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.*;

public class MyProject {
	static WebDriver driver;
    private String baseUrl = "http://example.com/login"; // for example login page URL
    
    @BeforeClass
    public void setUp() {
        // Set up the WebDriver and open the browser
    	System.setProperty("webdriver.chrome.driver", "/home/prachi/Downloads/jar files/chromedriver_linux64/chromedriver");    
    	driver = new ChromeDriver(); // launch chrome
	driver.manage().window().maximize();
	driver.manage().deleteAllCookies();
        driver.get(baseUrl);
    }
    
    @AfterClass
    public void tearDown() {
        // Close the browser and clean up
        driver.quit();
    }
    
    @Test(priority = 1)
    public void validLoginTest() {
        // Enter valid username and password
        enterUsername("validUsername");
        enterPassword("validPassword");
        
        // Click the login button
        clickLoginButton();
        
        // Verify successful login
        Assert.assertTrue(isLoggedIn());
    }
    
    @Test(priority = 2)
    public void invalidLoginTest() {
        // Enter invalid username and password
        enterUsername("invalidUsername");
        enterPassword("invalidPassword");
        
        // Click the login button
        clickLoginButton();
        
        // Verify error message is displayed
        Assert.assertTrue(isErrorMessageDisplayed());
        
        // Verify username and password fields retain their values
        Assert.assertEquals(getUsernameValue(), "invalidUsername");
        Assert.assertEquals(getPasswordValue(), "invalidPassword");
    }
    
    @Test(priority = 3)
    public void emptyFieldsTest() {
        // Verify login button is disabled when both fields are empty
        Assert.assertFalse(isLoginButtonEnabled());
    }
    
    @Test(priority = 4)
    public void filledFieldsTest() {
        // Enter valid username and password
        enterUsername("validUsername");
        enterPassword("validPassword");
        
        // Verify login button is enabled
        Assert.assertTrue(isLoginButtonEnabled());
    }
    
    @Test(priority = 5)
    public void passwordRecoveryTest() {
        // Click the 'Forgot Password' link
        clickForgotPasswordLink();
        
        // Enter a registered email address
        enterEmail("test@example.com");
        
        // Click the 'Recover Password' button
        clickRecoverPasswordButton();
        
        // Verify success message is displayed
        Assert.assertTrue(isSuccessMessageDisplayed());
   
        
        // Log in with the new password
        enterUsername("validUsername");
        enterPassword("newPassword");
        clickLoginButton();
        
        // Verify successful login with new password
        Assert.assertTrue(isLoggedIn());
    }
    
    private void enterUsername(String username) {
        WebElement usernameField = driver.findElement(By.id("username"));
        usernameField.clear();
        usernameField.sendKeys(username);
    }
    
    private void enterPassword(String password) {
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.clear();
        passwordField.sendKeys(password);
    }
    
    private void clickLoginButton() {
        WebElement loginButton = driver.findElement(By.id("loginButton"));
        loginButton.click();
    }
    
    private boolean isLoggedIn() {
       
        return true; 
    }
    
    private boolean isErrorMessageDisplayed() {
        WebElement errorMessage = driver.findElement(By.id("errorMessage"));
        return errorMessage.isDisplayed();
    }
    
    private String getUsernameValue() {
        WebElement usernameField = driver.findElement(By.id("username"));
        return usernameField.getAttribute("value");
    }
    
    private String getPasswordValue() {
        WebElement passwordField = driver.findElement(By.id("password"));
        return passwordField.getAttribute("value");
    }
    
    private boolean isLoginButtonEnabled() {
        WebElement loginButton = driver.findElement(By.id("loginButton"));
        return loginButton.isEnabled();
    }
    
    private void clickForgotPasswordLink() {
        WebElement forgotPasswordLink = driver.findElement(By.linkText("Forgot Password"));
        forgotPasswordLink.click();
    }
    
    private void enterEmail(String email) {
        WebElement emailField = driver.findElement(By.id("email"));
        emailField.clear();
        emailField.sendKeys(email);
    }
    
    private void clickRecoverPasswordButton() {
        WebElement recoverPasswordButton = driver.findElement(By.id("recoverPasswordButton"));
        recoverPasswordButton.click();
    }
    
    private boolean isSuccessMessageDisplayed() {
        WebElement successMessage = driver.findElement(By.id("successMessage"));
        return successMessage.isDisplayed();
    }
}
